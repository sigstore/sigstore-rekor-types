# generated by datamodel-codegen:
#   filename:  rpm_schema.json
#   version:   0.35.0

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, ConfigDict, Field, RootModel, StrictStr


class PublicKey(BaseModel):
    """The PGP public key that can verify the RPM signature"""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    content: str = Field(
        ...,
        description="Specifies the content of the public key inline within the document",
    )


class Algorithm(str, Enum):
    """The hashing function used to compute the hash value"""

    SHA256 = "sha256"


class Hash(BaseModel):
    """Specifies the hash algorithm and value for the package"""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    algorithm: Algorithm = Field(
        ...,
        description="The hashing function used to compute the hash value",
    )
    value: StrictStr = Field(..., description="The hash value for the package")


class Package(BaseModel):
    """Information about the package associated with the entry"""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    headers: dict[str, StrictStr] | None = Field(
        default=None,
        description="Values of the RPM headers",
    )
    hash: Hash = Field(..., description="Specifies the hash algorithm and value for the package")
    content: str | None = Field(
        default=None,
        description="Specifies the package inline within the document",
    )


Hash1 = Hash


class Package1(BaseModel):
    """Information about the package associated with the entry"""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    headers: dict[str, StrictStr] | None = Field(
        default=None,
        description="Values of the RPM headers",
    )
    hash: Hash1 | None = Field(
        default=None,
        description="Specifies the hash algorithm and value for the package",
    )
    content: str = Field(..., description="Specifies the package inline within the document")


class RpmV001Schema(BaseModel):
    """Schema for RPM entries"""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    public_key: PublicKey = Field(
        ...,
        alias="publicKey",
        description="The PGP public key that can verify the RPM signature",
    )
    package: Package | Package1 = Field(
        ...,
        description="Information about the package associated with the entry",
    )


class RpmSchema(RootModel[RpmV001Schema]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: RpmV001Schema = Field(..., description="Schema for RPM objects", title="RPM Schema")
