# generated by datamodel-codegen:
#   timestamp: 2023-10-03T20:01:56+00:00

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, Field, RootModel, StrictStr


class ProposedContent(BaseModel):
    envelope: StrictStr = Field(
        ...,
        description="DSSE envelope specified as a stringified JSON object",
    )
    verifiers: list[str] = Field(
        ...,
        description=(
            "collection of all verification material (e.g. public keys or certificates) used to"
            " verify signatures over envelope's payload, specified as base64-encoded strings"
        ),
        min_length=1,
    )


class Signature(BaseModel):
    signature: StrictStr = Field(..., description="base64 encoded signature of the payload")
    verifier: str = Field(
        ...,
        description=(
            "verification material that was used to verify the corresponding signature, specified"
            " as a base64 encoded string"
        ),
    )


class Algorithm(Enum):
    SHA256 = "sha256"


class EnvelopeHash(BaseModel):
    algorithm: Algorithm = Field(
        ...,
        description="The hashing function used to compute the hash value",
    )
    value: StrictStr = Field(
        ...,
        description="The value of the computed digest over the entire envelope",
    )


class PayloadHash(BaseModel):
    algorithm: Algorithm = Field(
        ...,
        description="The hashing function used to compute the hash value",
    )
    value: StrictStr = Field(
        ...,
        description="The value of the computed digest over the payload within the envelope",
    )


class DsseV001Schema(BaseModel):
    proposed_content: ProposedContent | None = Field(None, alias="proposedContent")
    signatures: list[Signature] | None = Field(
        None,
        description=(
            "extracted collection of all signatures of the envelope's payload; elements will be"
            " sorted by lexicographical order of the base64 encoded signature strings"
        ),
        min_length=1,
    )
    envelope_hash: EnvelopeHash | None = Field(
        None,
        alias="envelopeHash",
        description=(
            "Specifies the hash algorithm and value encompassing the entire envelope sent to Rekor"
        ),
    )
    payload_hash: PayloadHash | None = Field(
        None,
        alias="payloadHash",
        description=(
            "Specifies the hash algorithm and value covering the payload within the DSSE envelope"
        ),
    )


class DsseSchema(RootModel[DsseV001Schema]):
    root: DsseV001Schema = Field(
        ...,
        description="log entry schema for dsse envelopes",
        title="DSSE Schema",
    )
