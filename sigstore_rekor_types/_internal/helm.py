# generated by datamodel-codegen:
#   timestamp: 2023-10-03T20:01:56+00:00

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, Field, RootModel, StrictStr


class PublicKey(BaseModel):
    content: str = Field(
        ...,
        description="Specifies the content of the public key inline within the document",
    )


class Algorithm(Enum):
    SHA256 = "sha256"


class Hash(BaseModel):
    algorithm: Algorithm = Field(
        ...,
        description="The hashing function used to compute the hash value",
    )
    value: StrictStr = Field(..., description="The hash value for the chart")


class Chart(BaseModel):
    hash: Hash | None = Field(
        None,
        description="Specifies the hash algorithm and value for the chart",
    )


class HelmV001Schema(BaseModel):
    public_key: PublicKey = Field(
        ...,
        alias="publicKey",
        description="The public key that can verify the package signature",
    )
    chart: Chart = Field(
        ...,
        description="Information about the Helm chart associated with the entry",
    )


class HelmSchema(RootModel[HelmV001Schema]):
    root: HelmV001Schema = Field(..., description="Schema for Helm objects", title="Helm Schema")
