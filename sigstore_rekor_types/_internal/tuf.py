# generated by datamodel-codegen:
#   timestamp: 2023-10-04T15:20:05+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field, RootModel, StrictStr


class Metadata(BaseModel):
    content: Dict[str, Any] = Field(
        ...,
        description="Specifies the metadata inline within the document",
    )


class Root(BaseModel):
    content: Dict[str, Any] = Field(
        ...,
        description="Specifies the metadata inline within the document",
    )


class TufV001Schema(BaseModel):
    spec_version: Optional[StrictStr] = Field(None, description="TUF specification version")
    metadata: Metadata = Field(..., description="TUF metadata")
    root: Root = Field(
        ...,
        description="root metadata containing about the public keys used to sign the manifest",
    )


class TufSchema(RootModel[TufV001Schema]):
    root: TufV001Schema = Field(
        ...,
        description="Schema for TUF metadata objects",
        title="TUF Schema",
    )
