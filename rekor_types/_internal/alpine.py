# generated by datamodel-codegen:

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field, RootModel


class PublicKey(BaseModel):
    """The public key that can verify the package signature."""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    content: str = Field(
        ...,
        description="Specifies the content of the public key inline within the document",
    )


class AlpineV001Schema(BaseModel):
    """Schema for Alpine Package entries."""

    model_config = ConfigDict(
        populate_by_name=True,
    )
    public_key: PublicKey = Field(
        ...,
        alias="publicKey",
        description="The public key that can verify the package signature",
    )


class AlpinePackageSchema(RootModel[AlpineV001Schema]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: AlpineV001Schema = Field(
        ...,
        description="Schema for Alpine package objects",
        title="Alpine Package Schema",
    )
